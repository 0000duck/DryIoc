<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\..\packages\xunit.core.2.0.0\build\portable-net45+win+wpa81+wp80+monotouch+monoandroid+Xamarin.iOS\xunit.core.props" Condition="Exists('..\..\packages\xunit.core.2.0.0\build\portable-net45+win+wpa81+wp80+monotouch+monoandroid+Xamarin.iOS\xunit.core.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{69ECCA75-698F-41BC-B25F-565AEC01E3EA}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>DryIoc.IssuesTests</RootNamespace>
    <AssemblyName>DryIoc.IssuesTests</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <TargetFrameworkProfile />
    <NuGetPackageImportStamp>37911b6d</NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>..\bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>..\bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Autofac, Version=3.5.0.0, Culture=neutral, PublicKeyToken=17863af14b0044da, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Autofac.3.5.2\lib\net40\Autofac.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="ExpressionToCodeLib, Version=1.5.2.0, Culture=neutral, PublicKeyToken=b43a6eb33831e563, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\packages\ExpressionToCodeLib.1.5.4.0\lib\net40-Client\ExpressionToCodeLib.dll</HintPath>
    </Reference>
    <Reference Include="log4net, Version=1.2.13.0, Culture=neutral, PublicKeyToken=669e0ddf0bb1aa2a, processorArchitecture=MSIL">
      <HintPath>..\..\packages\log4net.2.0.3\lib\net40-full\log4net.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="NSubstitute">
      <HintPath>..\..\packages\NSubstitute.1.8.1.0\lib\net45\NSubstitute.dll</HintPath>
    </Reference>
    <Reference Include="nunit.framework, Version=2.6.4.14350, Culture=neutral, PublicKeyToken=96d09a1eb7f44a77, processorArchitecture=MSIL">
      <HintPath>..\..\packages\NUnit.2.6.4\lib\nunit.framework.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Serilog, Version=1.5.0.0, Culture=neutral, PublicKeyToken=24c2f752a8e58a10, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Serilog.1.5.14\lib\net45\Serilog.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Serilog.FullNetFx, Version=1.5.0.0, Culture=neutral, PublicKeyToken=24c2f752a8e58a10, processorArchitecture=MSIL">
      <HintPath>..\..\packages\Serilog.1.5.14\lib\net45\Serilog.FullNetFx.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.Core" />
    <Reference Include="xunit.abstractions, Version=2.0.0.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <HintPath>..\..\packages\xunit.abstractions.2.0.0\lib\net35\xunit.abstractions.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="xunit.assert, Version=2.0.0.2929, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <HintPath>..\..\packages\xunit.assert.2.0.0\lib\portable-net45+win+wpa81+wp80+monotouch+monoandroid+Xamarin.iOS\xunit.assert.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="xunit.core, Version=2.0.0.2929, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <HintPath>..\..\packages\xunit.extensibility.core.2.0.0\lib\portable-net45+win+wpa81+wp80+monotouch+monoandroid+Xamarin.iOS\xunit.core.dll</HintPath>
      <Private>True</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="DotnetWeekBlogExample.cs" />
    <Compile Include="InjectListOfDepsWithStringDeps.cs" />
    <Compile Include="Issue152_ExponentialMemoryPerformanceWithRegardsToTheObjectGraphSize.cs" />
    <Compile Include="Can_inject_singleton_service_from_parent_container_After_it_was_resolved_from_parent.cs" />
    <Compile Include="InjectLog4netLog.cs" />
    <Compile Include="Issue107_NamedScopesDependingOnResolvedTypes.cs" />
    <Compile Include="Issue110_SupportContravarianceInResolveMany.cs" />
    <Compile Include="Issue110_HidingMultipleContravariantImplementationsBehindComposite.cs" />
    <Compile Include="Issue116_InvokeFactoryConstructorTwoTimes.cs" />
    <Compile Include="Issue122_DecoratorOfLazyResultsInStackOverflowException.cs" />
    <Compile Include="Issue123_TipsForMigrationFromAutofac.cs" />
    <Compile Include="Issue128_ResolveFailsWithSingletonsInOuterScope.cs" />
    <Compile Include="Issue135_DecoratorsIgnoredInChildScope.cs" />
    <Compile Include="Issue143_Mixing_closed_and_open_generics_subsumes_the_latter.cs" />
    <Compile Include="Issue144_NonPublic_property _as_FactoryMethod_causes_unexplained_NRE.cs" />
    <Compile Include="Issue145_SimplifyDefiningOfOpenGenericFactoryMethod.cs" />
    <Compile Include="Issue148_NestedOptionalDependenciesPreventTheOuterDependencyFromInstantiating.cs" />
    <Compile Include="Issue153_ContextDependentResolutionOnlyWorksForTheVeryFirstContext.cs" />
    <Compile Include="Issue157_ContainerResolveFactoryIsNotThreadSafe.cs" />
    <Compile Include="Issue158_WrappingDependencyInLazyResultsInTheLossOfLifespanValidation.cs" />
    <Compile Include="Issue159_Context_based_injection_doesnt_work_with_InjectPropertiesAndFields.cs" />
    <Compile Include="Issue160_NestingOfDecoratorsOfWrappedServiceUsesOnlyFirstDecorator.cs" />
    <Compile Include="Issue164_EventAggregatorImpl.cs" />
    <Compile Include="Issue166_Disposing_Facade_is_disposing_facade_parent.cs" />
    <Compile Include="Issue168_RegisterInstanceWithIfAlreadyRegisteredReplaceReplacesWrongRegistration.cs" />
    <Compile Include="Issue169_FalseAlarmCheckingScopeLifetimeConsistencyForFuncWrapper.cs" />
    <Compile Include="Issue178_FallbackContainerDisposesInstanceRegisteredInParent.cs" />
    <Compile Include="Issue181_ RegisterInstanceUnregister.cs" />
    <Compile Include="Issue200_MultipleInstancesForSingletonCreatedWhenContainerIsSharedAmongMultipleThreads.cs" />
    <Compile Include="Issue201_MutithreadingIssueWhenRegisterInstanceUsedWithinOpenScope.cs" />
    <Compile Include="Issue212_ResolveManyOfObjectWithGenericRequiredServiceTypeIsFailingWithArgumentException.cs" />
    <Compile Include="Issue213_LazySingletonsShouldBeResolvedAfterContainerIsDisposed.cs" />
    <Compile Include="Issue224_EnumerableWrappedInFuncLosesTheInformationAboutFuncWrapperCausingIncorrectScopeLifetimeValidation.cs" />
    <Compile Include="Issue230_CustomInitializerAttachedToLazilyResolvedDependencyIsCalledOncePerResolution.cs" />
    <Compile Include="Issue251_AutoRegisterTypesFromDifferentNamespaceAndAssemblies.cs" />
    <Compile Include="Issue262_Using_attributes_to_inject_primitive_variables.cs" />
    <Compile Include="Issue264_IfAlreadyRegisteredReplaceCanSpanMultipleRegistrations.cs" />
    <Compile Include="Issue267_False_alarm_about_recursive_dependency_when_using_decorator.cs" />
    <Compile Include="Issue274_Lazy_resolution_of_dependency_registered_with_ReuseInResolutionScope_breaks_subsequent_resolutions_without_wrappers.cs" />
    <Compile Include="Issue277_Custom_value_for_dependency_evaluated_to_null_is_interpreted_as_no_custom_value.cs" />
    <Compile Include="Issue85_SkipResolutionForPropertiesAndFieldsAlreadySetInConstructor.cs" />
    <Compile Include="DryIOCSingletonFailureTest.cs" />
    <Compile Include="Issue80_SupportWrappersForAllInterfacesImplementedByArray.cs" />
    <Compile Include="Issue45_UnregisterOpenGenericAfterItWasResolvedOnce.cs" />
    <Compile Include="Issue46_ReuseInCurrentScopeForNestedDependenciesNotWorking.cs" />
    <Compile Include="Issue58_HandleReusedObjectsIDisposableAndGCing.cs" />
    <Compile Include="Issue64_ScopeAndChildContainerAccessAfterDisposal.cs" />
    <Compile Include="Issue69_RecognizeGenericParameterConstraints.cs" />
    <Compile Include="Issue81_SupportForOptionalParametersInConstructor.cs" />
    <Compile Include="Issue86_SkipIndexerOnAllPropertiesInjection.cs" />
    <Compile Include="Issues184_ReuseInNamedChildrenOfNamedScopes.cs" />
    <Compile Include="Issue_HandleVariance.cs" />
    <Compile Include="Issue_InjectingSerilogLogger.cs" />
    <Compile Include="Issue_InjectPrimitiveValueBasedOnRequest.cs" />
    <Compile Include="Issue278_Arg_Of_does_not_recognize_service_key_of_non_primitive_type.cs" />
    <Compile Include="Issue_SupportForDynamicKeyword.cs" />
    <Compile Include="Issue_UsingAsyncMethodAsMadeOf.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Samples\AutoWiring.cs" />
    <Compile Include="Samples\ConstructorSelectionTests.cs" />
    <Compile Include="Samples\GettingStarted.cs" />
    <Compile Include="Samples\LazyRegistrationInfoStepByStep.cs" />
    <Compile Include="Samples\OpenScopeTests.cs" />
    <Compile Include="Samples\PubSub.cs" />
    <Compile Include="Samples\ResolveMocksForNonRegisteredServices.cs" />
    <Compile Include="Samples\SelectConstructorWithAllResolvableArguments.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\Net45\DryIoc\DryIoc.csproj">
      <Project>{b6c2fc35-7586-417b-ad35-32aed63adfa9}</Project>
      <Name>DryIoc</Name>
      <Private>True</Private>
    </ProjectReference>
    <ProjectReference Include="..\DryIoc.MefAttributedModel.UnitTests.CUT\DryIoc.MefAttributedModel.UnitTests.CUT.csproj">
      <Project>{E210B3D9-29C8-46F5-8968-09A0E5857158}</Project>
      <Name>DryIoc.MefAttributedModel.UnitTests.CUT</Name>
    </ProjectReference>
    <ProjectReference Include="..\DryIoc.MefAttributedModel\DryIoc.MefAttributedModel.csproj">
      <Project>{bfb1206a-3545-4369-8f23-49fd1bffc362}</Project>
      <Name>DryIoc.MefAttributedModel</Name>
    </ProjectReference>
    <ProjectReference Include="..\DryIocAttributes\DryIocAttributes.csproj">
      <Project>{9fb3bbb2-30a6-4b67-9af7-ffc152920e49}</Project>
      <Name>DryIocAttributes</Name>
      <Private>False</Private>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Content Include="DryIoc.Samples.CUT.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
    <Error Condition="!Exists('..\..\packages\xunit.core.2.0.0\build\portable-net45+win+wpa81+wp80+monotouch+monoandroid+Xamarin.iOS\xunit.core.props')" Text="$([System.String]::Format('$(ErrorText)', '..\..\packages\xunit.core.2.0.0\build\portable-net45+win+wpa81+wp80+monotouch+monoandroid+Xamarin.iOS\xunit.core.props'))" />
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>