<#
//===========================================
// The code is provided by YOU:
// You may configure container,
// Register your services,
// And return container ready for generation.
//
// GetContainerWithRegistrations  
// implementation below is just an EXAMPLE!
//===========================================
#>
<#@ assembly Name="$(SolutionDir)packages\DryIocAttributes.dll.2.0.0-rc4build349\lib\net45\DryIocAttributes.dll" #>
<#@ assembly Name="$(SolutionDir)packages\DryIoc.MefAttributedModel.dll.2.0.0-rc4build349\lib\net45\DryIoc.MefAttributedModel.dll" #>
<#@ import Namespace="DryIoc.MefAttributedModel" #>

<#@ assembly Name="$(ProjectDir)\..\bin\$(Configuration)\DryIoc.MefAttributedModel.UnitTests.CUT.dll" #>
<#@ import Namespace="DryIoc.MefAttributedModel.UnitTests.CUT" #>

<#+
// Specify your container and registrations
IContainer GetContainerWithRegistrations()
{
    var container = new Container().WithMefAttributedModel();

    var types = typeof(IDecoratedResult).Assembly.GetLoadedTypes();

    container.RegisterExports(types);
    
    return container;
}

// Specify what resolution roots should be generated
bool IsResolutionRoot(ServiceRegistrationInfo info) 
{
	// As an EXAMPLE I am selecting the roots Setup.With(asResolutionRoot: true) 
	return ContainerTools.SetupAsResolutionRoots(info);
}
#>