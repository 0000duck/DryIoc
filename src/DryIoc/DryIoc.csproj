<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFrameworks Condition="'$(DevMode)' == 'true'">net45;netstandard2.0;netstandard1.0</TargetFrameworks>
        <TargetFrameworks Condition="'$(DevMode)' != 'true'">net35;net40;net45;netstandard1.0;netstandard1.3;netstandard2.0;portable-net45+win8+wpa81+wp8;portable-net40+win8+wpa81+wp8+sl5</TargetFrameworks>
        <TargetFrameworks Condition="'$(NoLegacy)' == 'true'">net45;netstandard1.0;netstandard1.3;netstandard2.0</TargetFrameworks>

        <Product>DryIoc</Product>
        <VersionPrefix>4.7.6</VersionPrefix>
        <VersionSuffix></VersionSuffix>

        <AssemblyName>$(Product)</AssemblyName>
        <AssemblyTitle>$(AssemblyName) $(TargetFramework)</AssemblyTitle>

        <PackageId>$(Product).dll</PackageId>
        <Title>$(Product).dll</Title>
        <Description>DryIoc is fast, small, full-featured IoC Container for .NET</Description>
        <PackageTags>IoC Container Inversion-of-Control DI Dependency-Injection DRY Service-Provider Factory FastExpressionCompiler ImTools</PackageTags>
        <PackageReleaseNotes>
<![CDATA[
## v4.7.6 Bug-fix release

- fixed: #391 Deadlock during Resolve
- fixed: #394 For_Func_returned_type_with_lazy_dependency_Func_parameters_are_correctly_passed


## v4.7.5 Bug-fix release

- #390 NullReferenceException on Unregister
- fixed the potential issue with the switching back from the SelectLastFactoryRule to the default rule


## v4.7.4 Bug-fix release

- #376 DryIoc.Interpreter seems to mess up the exception call stack
- #378 Inconsistent resolution failure 


## v4.7.3 Bug-fix release

- #367 Resolve with FactoryMethod of instance throws DryIoc.ContainerException


## v4.7.2 Bug-fix release

- #365 Really fixing: Made.Of() Parameters incorrectly reused depending on Register() usage


## v4.7.1 Bug-fix release

- #365 Made.Of() Parameters incorrectly reused depending on Register() usage


## v4.7.0 Feature release

- #338 Child container disposes parent container singletons
- #355 Auto mocking feature for unit testing
- #356 Surface the FindFactoryWithTheMinReuseLifespan so it can be used together with the FactorySelector
- #357 Avoid overload ambiguity for the ScopedTo(Type) by adding the separate ScopedToService
- #358 Add and surface the Scope.Clone(withDisposables=false) to enable more ChildContainer scenarios
- #359 DynamicRegistrationsAsFallback being unnecessary called multiple times
- #360 Mark DynamicRegistrationProvider with the FactoryType (Service, Decorator or combination) to avoid unnecessary provider call and factory creation
- #363 Add CreateChild method as the basis for CreateFacade and such


## v4.6.0 Feature release

- #216 Add Rules.WithThrowIfScopedOrSingletonHasTransientDependency 
- #343 Scope validation for Transient does not work as expected 
- #344 Scope is disposed before parent when using facade (added Scopes and Singleton cloning into CreateFacade)
- #348 Create a child container without WithNoMoreRegistrationAllowed flag (surfacing IsRegistryChangePermitted in With method)
- #350 Wrong scoped resolve (together with MS DI rules)
- #352 Consider resolving the variance compatible open-generic the same as for collection of open-generics (added Rules.WithVarianceGenericTypesInResolve)

]]>
    </PackageReleaseNotes>
    </PropertyGroup>

    <ItemGroup Condition="'$(TargetFramework)' == 'netstandard1.3'">
        <PackageReference Include="System.Reflection.Emit.Lightweight" Version="4.3.0" />
    </ItemGroup>

    <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
        <PackageReference Include="System.Reflection.Emit.Lightweight" Version="4.3.0" />
    </ItemGroup>

    <Import Project="DryIoc.props" />

    <ItemGroup>
        <None Include="DryIoc.props" />
        <None Include="..\..\nuspecs\DryIoc\readme.txt" Pack="true" PackagePath="readme.txt" Visible="false" />
    </ItemGroup>

    <ItemGroup>
      <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
    </ItemGroup>

    <ItemGroup>
      <Compile Update="Container.Generated.cs">
        <DesignTime>True</DesignTime>
        <AutoGen>True</AutoGen>
        <DependentUpon>Container.Generated.tt</DependentUpon>
      </Compile>
    </ItemGroup>

    <ItemGroup>
      <None Update="Container.Generated.tt">
        <Generator>TextTemplatingFileGenerator</Generator>
        <LastGenOutput>Container.Generated.cs</LastGenOutput>
      </None>
    </ItemGroup>

</Project>
